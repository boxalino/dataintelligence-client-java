/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.boxalino.dataintelligence.api.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * This structure defines a data EmailCampaign. A campaign is a parameter holder for a campaign execution. It should not change at each sending, but the parameters (especially cmpid) can and should be changed before any new campaign sending (if new campid applies). For the case of trigger campaigns, the cmpid (and other parameters) usually don't change, but for the case of newsletter campaigns, very often each sending has a different id. In this case, the cmpid must be updated (and the dev configuration should be published) every time.
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2014-11-24")
public class EmailCampaign implements org.apache.thrift.TBase<EmailCampaign, EmailCampaign._Fields>, java.io.Serializable, Cloneable, Comparable<EmailCampaign> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EmailCampaign");

  private static final org.apache.thrift.protocol.TField EMAIL_CAMPAIGN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("emailCampaignId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CMPID_FIELD_DESC = new org.apache.thrift.protocol.TField("cmpid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("dateTime", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BASE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("baseUrl", org.apache.thrift.protocol.TType.MAP, (short)4);
  private static final org.apache.thrift.protocol.TField SUBJECT_FIELD_DESC = new org.apache.thrift.protocol.TField("subject", org.apache.thrift.protocol.TType.MAP, (short)5);
  private static final org.apache.thrift.protocol.TField FIRST_SENTENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("firstSentence", org.apache.thrift.protocol.TType.MAP, (short)6);
  private static final org.apache.thrift.protocol.TField LEGALS_FIELD_DESC = new org.apache.thrift.protocol.TField("legals", org.apache.thrift.protocol.TType.MAP, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new EmailCampaignStandardSchemeFactory());
    schemes.put(TupleScheme.class, new EmailCampaignTupleSchemeFactory());
  }

  /**
   * a unique id which should not contain any punctuation, only non-accentuated alphabetic and numeric characters and should not be longer than 50 characters
   */
  public String emailCampaignId; // required
  /**
   * the running campaign id which is often specific to the running of a specific newsletter e-mail (should be changed every time before sending a blast e-mail with the new value (don't forget to publish the dev configuration)
   */
  public String cmpid; // required
  /**
   * the dateTime at which the campaign will be sent (cannot be in the past when the campaign is ran, an exception will be then raised). Must have the format YYYY-MM-DD HH:MM:SS
   */
  public String dateTime; // required
  /**
   * a localized value of the base url to use for e-mail links
   */
  public Map<Language,String> baseUrl; // required
  /**
   * a localized value of the subject line of the e-mail (default, can be overwritten by a specific choice variant localized parameters with parameter name 'subject')
   */
  public Map<Language,String> subject; // required
  /**
   * a localized value of the first sentence of the e-mail (default, can be overwritten by a specific choice variant localized parameters with parameter name 'firstSentence')
   */
  public Map<Language,String> firstSentence; // required
  /**
   * a localized value of the legal notices to be included in the e-mail (default, can be extended by a specific choice variant localized parameters with parameter name 'legals')
   */
  public Map<Language,String> legals; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * a unique id which should not contain any punctuation, only non-accentuated alphabetic and numeric characters and should not be longer than 50 characters
     */
    EMAIL_CAMPAIGN_ID((short)1, "emailCampaignId"),
    /**
     * the running campaign id which is often specific to the running of a specific newsletter e-mail (should be changed every time before sending a blast e-mail with the new value (don't forget to publish the dev configuration)
     */
    CMPID((short)2, "cmpid"),
    /**
     * the dateTime at which the campaign will be sent (cannot be in the past when the campaign is ran, an exception will be then raised). Must have the format YYYY-MM-DD HH:MM:SS
     */
    DATE_TIME((short)3, "dateTime"),
    /**
     * a localized value of the base url to use for e-mail links
     */
    BASE_URL((short)4, "baseUrl"),
    /**
     * a localized value of the subject line of the e-mail (default, can be overwritten by a specific choice variant localized parameters with parameter name 'subject')
     */
    SUBJECT((short)5, "subject"),
    /**
     * a localized value of the first sentence of the e-mail (default, can be overwritten by a specific choice variant localized parameters with parameter name 'firstSentence')
     */
    FIRST_SENTENCE((short)6, "firstSentence"),
    /**
     * a localized value of the legal notices to be included in the e-mail (default, can be extended by a specific choice variant localized parameters with parameter name 'legals')
     */
    LEGALS((short)7, "legals");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // EMAIL_CAMPAIGN_ID
          return EMAIL_CAMPAIGN_ID;
        case 2: // CMPID
          return CMPID;
        case 3: // DATE_TIME
          return DATE_TIME;
        case 4: // BASE_URL
          return BASE_URL;
        case 5: // SUBJECT
          return SUBJECT;
        case 6: // FIRST_SENTENCE
          return FIRST_SENTENCE;
        case 7: // LEGALS
          return LEGALS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.EMAIL_CAMPAIGN_ID, new org.apache.thrift.meta_data.FieldMetaData("emailCampaignId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CMPID, new org.apache.thrift.meta_data.FieldMetaData("cmpid", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("dateTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BASE_URL, new org.apache.thrift.meta_data.FieldMetaData("baseUrl", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, Language.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.SUBJECT, new org.apache.thrift.meta_data.FieldMetaData("subject", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, Language.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.FIRST_SENTENCE, new org.apache.thrift.meta_data.FieldMetaData("firstSentence", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, Language.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.LEGALS, new org.apache.thrift.meta_data.FieldMetaData("legals", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, Language.class), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EmailCampaign.class, metaDataMap);
  }

  public EmailCampaign() {
  }

  public EmailCampaign(
    String emailCampaignId,
    String cmpid,
    String dateTime,
    Map<Language,String> baseUrl,
    Map<Language,String> subject,
    Map<Language,String> firstSentence,
    Map<Language,String> legals)
  {
    this();
    this.emailCampaignId = emailCampaignId;
    this.cmpid = cmpid;
    this.dateTime = dateTime;
    this.baseUrl = baseUrl;
    this.subject = subject;
    this.firstSentence = firstSentence;
    this.legals = legals;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public EmailCampaign(EmailCampaign other) {
    if (other.isSetEmailCampaignId()) {
      this.emailCampaignId = other.emailCampaignId;
    }
    if (other.isSetCmpid()) {
      this.cmpid = other.cmpid;
    }
    if (other.isSetDateTime()) {
      this.dateTime = other.dateTime;
    }
    if (other.isSetBaseUrl()) {
      Map<Language,String> __this__baseUrl = new HashMap<Language,String>(other.baseUrl.size());
      for (Map.Entry<Language, String> other_element : other.baseUrl.entrySet()) {

        Language other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        Language __this__baseUrl_copy_key = other_element_key;

        String __this__baseUrl_copy_value = other_element_value;

        __this__baseUrl.put(__this__baseUrl_copy_key, __this__baseUrl_copy_value);
      }
      this.baseUrl = __this__baseUrl;
    }
    if (other.isSetSubject()) {
      Map<Language,String> __this__subject = new HashMap<Language,String>(other.subject.size());
      for (Map.Entry<Language, String> other_element : other.subject.entrySet()) {

        Language other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        Language __this__subject_copy_key = other_element_key;

        String __this__subject_copy_value = other_element_value;

        __this__subject.put(__this__subject_copy_key, __this__subject_copy_value);
      }
      this.subject = __this__subject;
    }
    if (other.isSetFirstSentence()) {
      Map<Language,String> __this__firstSentence = new HashMap<Language,String>(other.firstSentence.size());
      for (Map.Entry<Language, String> other_element : other.firstSentence.entrySet()) {

        Language other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        Language __this__firstSentence_copy_key = other_element_key;

        String __this__firstSentence_copy_value = other_element_value;

        __this__firstSentence.put(__this__firstSentence_copy_key, __this__firstSentence_copy_value);
      }
      this.firstSentence = __this__firstSentence;
    }
    if (other.isSetLegals()) {
      Map<Language,String> __this__legals = new HashMap<Language,String>(other.legals.size());
      for (Map.Entry<Language, String> other_element : other.legals.entrySet()) {

        Language other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        Language __this__legals_copy_key = other_element_key;

        String __this__legals_copy_value = other_element_value;

        __this__legals.put(__this__legals_copy_key, __this__legals_copy_value);
      }
      this.legals = __this__legals;
    }
  }

  public EmailCampaign deepCopy() {
    return new EmailCampaign(this);
  }

  @Override
  public void clear() {
    this.emailCampaignId = null;
    this.cmpid = null;
    this.dateTime = null;
    this.baseUrl = null;
    this.subject = null;
    this.firstSentence = null;
    this.legals = null;
  }

  /**
   * a unique id which should not contain any punctuation, only non-accentuated alphabetic and numeric characters and should not be longer than 50 characters
   */
  public String getEmailCampaignId() {
    return this.emailCampaignId;
  }

  /**
   * a unique id which should not contain any punctuation, only non-accentuated alphabetic and numeric characters and should not be longer than 50 characters
   */
  public EmailCampaign setEmailCampaignId(String emailCampaignId) {
    this.emailCampaignId = emailCampaignId;
    return this;
  }

  public void unsetEmailCampaignId() {
    this.emailCampaignId = null;
  }

  /** Returns true if field emailCampaignId is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailCampaignId() {
    return this.emailCampaignId != null;
  }

  public void setEmailCampaignIdIsSet(boolean value) {
    if (!value) {
      this.emailCampaignId = null;
    }
  }

  /**
   * the running campaign id which is often specific to the running of a specific newsletter e-mail (should be changed every time before sending a blast e-mail with the new value (don't forget to publish the dev configuration)
   */
  public String getCmpid() {
    return this.cmpid;
  }

  /**
   * the running campaign id which is often specific to the running of a specific newsletter e-mail (should be changed every time before sending a blast e-mail with the new value (don't forget to publish the dev configuration)
   */
  public EmailCampaign setCmpid(String cmpid) {
    this.cmpid = cmpid;
    return this;
  }

  public void unsetCmpid() {
    this.cmpid = null;
  }

  /** Returns true if field cmpid is set (has been assigned a value) and false otherwise */
  public boolean isSetCmpid() {
    return this.cmpid != null;
  }

  public void setCmpidIsSet(boolean value) {
    if (!value) {
      this.cmpid = null;
    }
  }

  /**
   * the dateTime at which the campaign will be sent (cannot be in the past when the campaign is ran, an exception will be then raised). Must have the format YYYY-MM-DD HH:MM:SS
   */
  public String getDateTime() {
    return this.dateTime;
  }

  /**
   * the dateTime at which the campaign will be sent (cannot be in the past when the campaign is ran, an exception will be then raised). Must have the format YYYY-MM-DD HH:MM:SS
   */
  public EmailCampaign setDateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

  public void unsetDateTime() {
    this.dateTime = null;
  }

  /** Returns true if field dateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetDateTime() {
    return this.dateTime != null;
  }

  public void setDateTimeIsSet(boolean value) {
    if (!value) {
      this.dateTime = null;
    }
  }

  public int getBaseUrlSize() {
    return (this.baseUrl == null) ? 0 : this.baseUrl.size();
  }

  public void putToBaseUrl(Language key, String val) {
    if (this.baseUrl == null) {
      this.baseUrl = new HashMap<Language,String>();
    }
    this.baseUrl.put(key, val);
  }

  /**
   * a localized value of the base url to use for e-mail links
   */
  public Map<Language,String> getBaseUrl() {
    return this.baseUrl;
  }

  /**
   * a localized value of the base url to use for e-mail links
   */
  public EmailCampaign setBaseUrl(Map<Language,String> baseUrl) {
    this.baseUrl = baseUrl;
    return this;
  }

  public void unsetBaseUrl() {
    this.baseUrl = null;
  }

  /** Returns true if field baseUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetBaseUrl() {
    return this.baseUrl != null;
  }

  public void setBaseUrlIsSet(boolean value) {
    if (!value) {
      this.baseUrl = null;
    }
  }

  public int getSubjectSize() {
    return (this.subject == null) ? 0 : this.subject.size();
  }

  public void putToSubject(Language key, String val) {
    if (this.subject == null) {
      this.subject = new HashMap<Language,String>();
    }
    this.subject.put(key, val);
  }

  /**
   * a localized value of the subject line of the e-mail (default, can be overwritten by a specific choice variant localized parameters with parameter name 'subject')
   */
  public Map<Language,String> getSubject() {
    return this.subject;
  }

  /**
   * a localized value of the subject line of the e-mail (default, can be overwritten by a specific choice variant localized parameters with parameter name 'subject')
   */
  public EmailCampaign setSubject(Map<Language,String> subject) {
    this.subject = subject;
    return this;
  }

  public void unsetSubject() {
    this.subject = null;
  }

  /** Returns true if field subject is set (has been assigned a value) and false otherwise */
  public boolean isSetSubject() {
    return this.subject != null;
  }

  public void setSubjectIsSet(boolean value) {
    if (!value) {
      this.subject = null;
    }
  }

  public int getFirstSentenceSize() {
    return (this.firstSentence == null) ? 0 : this.firstSentence.size();
  }

  public void putToFirstSentence(Language key, String val) {
    if (this.firstSentence == null) {
      this.firstSentence = new HashMap<Language,String>();
    }
    this.firstSentence.put(key, val);
  }

  /**
   * a localized value of the first sentence of the e-mail (default, can be overwritten by a specific choice variant localized parameters with parameter name 'firstSentence')
   */
  public Map<Language,String> getFirstSentence() {
    return this.firstSentence;
  }

  /**
   * a localized value of the first sentence of the e-mail (default, can be overwritten by a specific choice variant localized parameters with parameter name 'firstSentence')
   */
  public EmailCampaign setFirstSentence(Map<Language,String> firstSentence) {
    this.firstSentence = firstSentence;
    return this;
  }

  public void unsetFirstSentence() {
    this.firstSentence = null;
  }

  /** Returns true if field firstSentence is set (has been assigned a value) and false otherwise */
  public boolean isSetFirstSentence() {
    return this.firstSentence != null;
  }

  public void setFirstSentenceIsSet(boolean value) {
    if (!value) {
      this.firstSentence = null;
    }
  }

  public int getLegalsSize() {
    return (this.legals == null) ? 0 : this.legals.size();
  }

  public void putToLegals(Language key, String val) {
    if (this.legals == null) {
      this.legals = new HashMap<Language,String>();
    }
    this.legals.put(key, val);
  }

  /**
   * a localized value of the legal notices to be included in the e-mail (default, can be extended by a specific choice variant localized parameters with parameter name 'legals')
   */
  public Map<Language,String> getLegals() {
    return this.legals;
  }

  /**
   * a localized value of the legal notices to be included in the e-mail (default, can be extended by a specific choice variant localized parameters with parameter name 'legals')
   */
  public EmailCampaign setLegals(Map<Language,String> legals) {
    this.legals = legals;
    return this;
  }

  public void unsetLegals() {
    this.legals = null;
  }

  /** Returns true if field legals is set (has been assigned a value) and false otherwise */
  public boolean isSetLegals() {
    return this.legals != null;
  }

  public void setLegalsIsSet(boolean value) {
    if (!value) {
      this.legals = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case EMAIL_CAMPAIGN_ID:
      if (value == null) {
        unsetEmailCampaignId();
      } else {
        setEmailCampaignId((String)value);
      }
      break;

    case CMPID:
      if (value == null) {
        unsetCmpid();
      } else {
        setCmpid((String)value);
      }
      break;

    case DATE_TIME:
      if (value == null) {
        unsetDateTime();
      } else {
        setDateTime((String)value);
      }
      break;

    case BASE_URL:
      if (value == null) {
        unsetBaseUrl();
      } else {
        setBaseUrl((Map<Language,String>)value);
      }
      break;

    case SUBJECT:
      if (value == null) {
        unsetSubject();
      } else {
        setSubject((Map<Language,String>)value);
      }
      break;

    case FIRST_SENTENCE:
      if (value == null) {
        unsetFirstSentence();
      } else {
        setFirstSentence((Map<Language,String>)value);
      }
      break;

    case LEGALS:
      if (value == null) {
        unsetLegals();
      } else {
        setLegals((Map<Language,String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case EMAIL_CAMPAIGN_ID:
      return getEmailCampaignId();

    case CMPID:
      return getCmpid();

    case DATE_TIME:
      return getDateTime();

    case BASE_URL:
      return getBaseUrl();

    case SUBJECT:
      return getSubject();

    case FIRST_SENTENCE:
      return getFirstSentence();

    case LEGALS:
      return getLegals();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case EMAIL_CAMPAIGN_ID:
      return isSetEmailCampaignId();
    case CMPID:
      return isSetCmpid();
    case DATE_TIME:
      return isSetDateTime();
    case BASE_URL:
      return isSetBaseUrl();
    case SUBJECT:
      return isSetSubject();
    case FIRST_SENTENCE:
      return isSetFirstSentence();
    case LEGALS:
      return isSetLegals();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof EmailCampaign)
      return this.equals((EmailCampaign)that);
    return false;
  }

  public boolean equals(EmailCampaign that) {
    if (that == null)
      return false;

    boolean this_present_emailCampaignId = true && this.isSetEmailCampaignId();
    boolean that_present_emailCampaignId = true && that.isSetEmailCampaignId();
    if (this_present_emailCampaignId || that_present_emailCampaignId) {
      if (!(this_present_emailCampaignId && that_present_emailCampaignId))
        return false;
      if (!this.emailCampaignId.equals(that.emailCampaignId))
        return false;
    }

    boolean this_present_cmpid = true && this.isSetCmpid();
    boolean that_present_cmpid = true && that.isSetCmpid();
    if (this_present_cmpid || that_present_cmpid) {
      if (!(this_present_cmpid && that_present_cmpid))
        return false;
      if (!this.cmpid.equals(that.cmpid))
        return false;
    }

    boolean this_present_dateTime = true && this.isSetDateTime();
    boolean that_present_dateTime = true && that.isSetDateTime();
    if (this_present_dateTime || that_present_dateTime) {
      if (!(this_present_dateTime && that_present_dateTime))
        return false;
      if (!this.dateTime.equals(that.dateTime))
        return false;
    }

    boolean this_present_baseUrl = true && this.isSetBaseUrl();
    boolean that_present_baseUrl = true && that.isSetBaseUrl();
    if (this_present_baseUrl || that_present_baseUrl) {
      if (!(this_present_baseUrl && that_present_baseUrl))
        return false;
      if (!this.baseUrl.equals(that.baseUrl))
        return false;
    }

    boolean this_present_subject = true && this.isSetSubject();
    boolean that_present_subject = true && that.isSetSubject();
    if (this_present_subject || that_present_subject) {
      if (!(this_present_subject && that_present_subject))
        return false;
      if (!this.subject.equals(that.subject))
        return false;
    }

    boolean this_present_firstSentence = true && this.isSetFirstSentence();
    boolean that_present_firstSentence = true && that.isSetFirstSentence();
    if (this_present_firstSentence || that_present_firstSentence) {
      if (!(this_present_firstSentence && that_present_firstSentence))
        return false;
      if (!this.firstSentence.equals(that.firstSentence))
        return false;
    }

    boolean this_present_legals = true && this.isSetLegals();
    boolean that_present_legals = true && that.isSetLegals();
    if (this_present_legals || that_present_legals) {
      if (!(this_present_legals && that_present_legals))
        return false;
      if (!this.legals.equals(that.legals))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_emailCampaignId = true && (isSetEmailCampaignId());
    list.add(present_emailCampaignId);
    if (present_emailCampaignId)
      list.add(emailCampaignId);

    boolean present_cmpid = true && (isSetCmpid());
    list.add(present_cmpid);
    if (present_cmpid)
      list.add(cmpid);

    boolean present_dateTime = true && (isSetDateTime());
    list.add(present_dateTime);
    if (present_dateTime)
      list.add(dateTime);

    boolean present_baseUrl = true && (isSetBaseUrl());
    list.add(present_baseUrl);
    if (present_baseUrl)
      list.add(baseUrl);

    boolean present_subject = true && (isSetSubject());
    list.add(present_subject);
    if (present_subject)
      list.add(subject);

    boolean present_firstSentence = true && (isSetFirstSentence());
    list.add(present_firstSentence);
    if (present_firstSentence)
      list.add(firstSentence);

    boolean present_legals = true && (isSetLegals());
    list.add(present_legals);
    if (present_legals)
      list.add(legals);

    return list.hashCode();
  }

  @Override
  public int compareTo(EmailCampaign other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetEmailCampaignId()).compareTo(other.isSetEmailCampaignId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailCampaignId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailCampaignId, other.emailCampaignId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCmpid()).compareTo(other.isSetCmpid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCmpid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cmpid, other.cmpid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDateTime()).compareTo(other.isSetDateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dateTime, other.dateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBaseUrl()).compareTo(other.isSetBaseUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBaseUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.baseUrl, other.baseUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubject()).compareTo(other.isSetSubject());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubject()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subject, other.subject);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFirstSentence()).compareTo(other.isSetFirstSentence());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirstSentence()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.firstSentence, other.firstSentence);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegals()).compareTo(other.isSetLegals());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegals()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legals, other.legals);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("EmailCampaign(");
    boolean first = true;

    sb.append("emailCampaignId:");
    if (this.emailCampaignId == null) {
      sb.append("null");
    } else {
      sb.append(this.emailCampaignId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cmpid:");
    if (this.cmpid == null) {
      sb.append("null");
    } else {
      sb.append(this.cmpid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dateTime:");
    if (this.dateTime == null) {
      sb.append("null");
    } else {
      sb.append(this.dateTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("baseUrl:");
    if (this.baseUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.baseUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("subject:");
    if (this.subject == null) {
      sb.append("null");
    } else {
      sb.append(this.subject);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("firstSentence:");
    if (this.firstSentence == null) {
      sb.append("null");
    } else {
      sb.append(this.firstSentence);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("legals:");
    if (this.legals == null) {
      sb.append("null");
    } else {
      sb.append(this.legals);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (emailCampaignId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'emailCampaignId' was not present! Struct: " + toString());
    }
    if (cmpid == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'cmpid' was not present! Struct: " + toString());
    }
    if (dateTime == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dateTime' was not present! Struct: " + toString());
    }
    if (baseUrl == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'baseUrl' was not present! Struct: " + toString());
    }
    if (subject == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'subject' was not present! Struct: " + toString());
    }
    if (firstSentence == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'firstSentence' was not present! Struct: " + toString());
    }
    if (legals == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'legals' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class EmailCampaignStandardSchemeFactory implements SchemeFactory {
    public EmailCampaignStandardScheme getScheme() {
      return new EmailCampaignStandardScheme();
    }
  }

  private static class EmailCampaignStandardScheme extends StandardScheme<EmailCampaign> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, EmailCampaign struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // EMAIL_CAMPAIGN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailCampaignId = iprot.readString();
              struct.setEmailCampaignIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CMPID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cmpid = iprot.readString();
              struct.setCmpidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dateTime = iprot.readString();
              struct.setDateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BASE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map16 = iprot.readMapBegin();
                struct.baseUrl = new HashMap<Language,String>(2*_map16.size);
                Language _key17;
                String _val18;
                for (int _i19 = 0; _i19 < _map16.size; ++_i19)
                {
                  _key17 = com.boxalino.dataintelligence.api.thrift.Language.findByValue(iprot.readI32());
                  _val18 = iprot.readString();
                  struct.baseUrl.put(_key17, _val18);
                }
                iprot.readMapEnd();
              }
              struct.setBaseUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SUBJECT
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map20 = iprot.readMapBegin();
                struct.subject = new HashMap<Language,String>(2*_map20.size);
                Language _key21;
                String _val22;
                for (int _i23 = 0; _i23 < _map20.size; ++_i23)
                {
                  _key21 = com.boxalino.dataintelligence.api.thrift.Language.findByValue(iprot.readI32());
                  _val22 = iprot.readString();
                  struct.subject.put(_key21, _val22);
                }
                iprot.readMapEnd();
              }
              struct.setSubjectIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FIRST_SENTENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map24 = iprot.readMapBegin();
                struct.firstSentence = new HashMap<Language,String>(2*_map24.size);
                Language _key25;
                String _val26;
                for (int _i27 = 0; _i27 < _map24.size; ++_i27)
                {
                  _key25 = com.boxalino.dataintelligence.api.thrift.Language.findByValue(iprot.readI32());
                  _val26 = iprot.readString();
                  struct.firstSentence.put(_key25, _val26);
                }
                iprot.readMapEnd();
              }
              struct.setFirstSentenceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LEGALS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map28 = iprot.readMapBegin();
                struct.legals = new HashMap<Language,String>(2*_map28.size);
                Language _key29;
                String _val30;
                for (int _i31 = 0; _i31 < _map28.size; ++_i31)
                {
                  _key29 = com.boxalino.dataintelligence.api.thrift.Language.findByValue(iprot.readI32());
                  _val30 = iprot.readString();
                  struct.legals.put(_key29, _val30);
                }
                iprot.readMapEnd();
              }
              struct.setLegalsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, EmailCampaign struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.emailCampaignId != null) {
        oprot.writeFieldBegin(EMAIL_CAMPAIGN_ID_FIELD_DESC);
        oprot.writeString(struct.emailCampaignId);
        oprot.writeFieldEnd();
      }
      if (struct.cmpid != null) {
        oprot.writeFieldBegin(CMPID_FIELD_DESC);
        oprot.writeString(struct.cmpid);
        oprot.writeFieldEnd();
      }
      if (struct.dateTime != null) {
        oprot.writeFieldBegin(DATE_TIME_FIELD_DESC);
        oprot.writeString(struct.dateTime);
        oprot.writeFieldEnd();
      }
      if (struct.baseUrl != null) {
        oprot.writeFieldBegin(BASE_URL_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, struct.baseUrl.size()));
          for (Map.Entry<Language, String> _iter32 : struct.baseUrl.entrySet())
          {
            oprot.writeI32(_iter32.getKey().getValue());
            oprot.writeString(_iter32.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.subject != null) {
        oprot.writeFieldBegin(SUBJECT_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, struct.subject.size()));
          for (Map.Entry<Language, String> _iter33 : struct.subject.entrySet())
          {
            oprot.writeI32(_iter33.getKey().getValue());
            oprot.writeString(_iter33.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.firstSentence != null) {
        oprot.writeFieldBegin(FIRST_SENTENCE_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, struct.firstSentence.size()));
          for (Map.Entry<Language, String> _iter34 : struct.firstSentence.entrySet())
          {
            oprot.writeI32(_iter34.getKey().getValue());
            oprot.writeString(_iter34.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.legals != null) {
        oprot.writeFieldBegin(LEGALS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, struct.legals.size()));
          for (Map.Entry<Language, String> _iter35 : struct.legals.entrySet())
          {
            oprot.writeI32(_iter35.getKey().getValue());
            oprot.writeString(_iter35.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class EmailCampaignTupleSchemeFactory implements SchemeFactory {
    public EmailCampaignTupleScheme getScheme() {
      return new EmailCampaignTupleScheme();
    }
  }

  private static class EmailCampaignTupleScheme extends TupleScheme<EmailCampaign> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, EmailCampaign struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.emailCampaignId);
      oprot.writeString(struct.cmpid);
      oprot.writeString(struct.dateTime);
      {
        oprot.writeI32(struct.baseUrl.size());
        for (Map.Entry<Language, String> _iter36 : struct.baseUrl.entrySet())
        {
          oprot.writeI32(_iter36.getKey().getValue());
          oprot.writeString(_iter36.getValue());
        }
      }
      {
        oprot.writeI32(struct.subject.size());
        for (Map.Entry<Language, String> _iter37 : struct.subject.entrySet())
        {
          oprot.writeI32(_iter37.getKey().getValue());
          oprot.writeString(_iter37.getValue());
        }
      }
      {
        oprot.writeI32(struct.firstSentence.size());
        for (Map.Entry<Language, String> _iter38 : struct.firstSentence.entrySet())
        {
          oprot.writeI32(_iter38.getKey().getValue());
          oprot.writeString(_iter38.getValue());
        }
      }
      {
        oprot.writeI32(struct.legals.size());
        for (Map.Entry<Language, String> _iter39 : struct.legals.entrySet())
        {
          oprot.writeI32(_iter39.getKey().getValue());
          oprot.writeString(_iter39.getValue());
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, EmailCampaign struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.emailCampaignId = iprot.readString();
      struct.setEmailCampaignIdIsSet(true);
      struct.cmpid = iprot.readString();
      struct.setCmpidIsSet(true);
      struct.dateTime = iprot.readString();
      struct.setDateTimeIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map40 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
        struct.baseUrl = new HashMap<Language,String>(2*_map40.size);
        Language _key41;
        String _val42;
        for (int _i43 = 0; _i43 < _map40.size; ++_i43)
        {
          _key41 = com.boxalino.dataintelligence.api.thrift.Language.findByValue(iprot.readI32());
          _val42 = iprot.readString();
          struct.baseUrl.put(_key41, _val42);
        }
      }
      struct.setBaseUrlIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map44 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
        struct.subject = new HashMap<Language,String>(2*_map44.size);
        Language _key45;
        String _val46;
        for (int _i47 = 0; _i47 < _map44.size; ++_i47)
        {
          _key45 = com.boxalino.dataintelligence.api.thrift.Language.findByValue(iprot.readI32());
          _val46 = iprot.readString();
          struct.subject.put(_key45, _val46);
        }
      }
      struct.setSubjectIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map48 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
        struct.firstSentence = new HashMap<Language,String>(2*_map48.size);
        Language _key49;
        String _val50;
        for (int _i51 = 0; _i51 < _map48.size; ++_i51)
        {
          _key49 = com.boxalino.dataintelligence.api.thrift.Language.findByValue(iprot.readI32());
          _val50 = iprot.readString();
          struct.firstSentence.put(_key49, _val50);
        }
      }
      struct.setFirstSentenceIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map52 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
        struct.legals = new HashMap<Language,String>(2*_map52.size);
        Language _key53;
        String _val54;
        for (int _i55 = 0; _i55 < _map52.size; ++_i55)
        {
          _key53 = com.boxalino.dataintelligence.api.thrift.Language.findByValue(iprot.readI32());
          _val54 = iprot.readString();
          struct.legals.put(_key53, _val54);
        }
      }
      struct.setLegalsIsSet(true);
    }
  }

}

