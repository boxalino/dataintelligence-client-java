/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.boxalino.dataintelligence.api.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * This enumeration defines the possible process task execution statuses type (to check the completion of an execution of  process task and its result)
 */
public enum ProcessTaskExecutionStatusType implements org.apache.thrift.TEnum {
  /**
   * The process was not started yet
   */
  WAITING(1),
  /**
   * The process has started and is currently running
   */
  STARTED(2),
  /**
   * The process has finished successfully
   */
  FINISHED_SUCCESS(3),
  /**
   * The process has finished, but with some warnings
   */
  FINISHED_WITH_WARNINGS(4),
  /**
   * The process has failed
   */
  FAILED(5),
  /**
   * The process has been aborted
   */
  ABORTED(6);

  private final int value;

  private ProcessTaskExecutionStatusType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ProcessTaskExecutionStatusType findByValue(int value) { 
    switch (value) {
      case 1:
        return WAITING;
      case 2:
        return STARTED;
      case 3:
        return FINISHED_SUCCESS;
      case 4:
        return FINISHED_WITH_WARNINGS;
      case 5:
        return FAILED;
      case 6:
        return ABORTED;
      default:
        return null;
    }
  }
}
