/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.boxalino.dataintelligence.api.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * This enumeration defines possible report result value key types.
 * For each report result groups, the system returns a map of ReportResultValues object (i.e.:a map of report metric (kpi) with their values) for each time range.
 * These time ranges can be of different types (absolute defining exactly form a specific moment to another, or relative, starting at 0 for the first key, for cohort analysis).
 */
public enum ReportResultTimeRangeType implements org.apache.thrift.TEnum {
  /**
   * an absolute time range (defines the datetime start and end of the reporting values for this key)
   */
  REAL_TIME(1),
  /**
   * returns the start and end date time based on timestamp 0 being the beginning of the report (if cohort per day: first value: 0->3600*24, second value: 3600*24->3600*24*2, ...)
   */
  COHORT(2);

  private final int value;

  private ReportResultTimeRangeType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ReportResultTimeRangeType findByValue(int value) { 
    switch (value) {
      case 1:
        return REAL_TIME;
      case 2:
        return COHORT;
      default:
        return null;
    }
  }
}
