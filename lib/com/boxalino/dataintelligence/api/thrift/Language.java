/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.boxalino.dataintelligence.api.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum Language implements org.apache.thrift.TEnum {
  GERMAN(1),
  FRENCH(2),
  ENGLISH(3),
  ITALIAN(4),
  SPANISH(5),
  DUTCH(6),
  PORTUGUESE(7),
  SWEDISH(8),
  ARABIC(9),
  RUSSIAN(10),
  JAPANESE(11),
  KOREAN(12),
  TURKISH(13),
  VIETNAMESE(14),
  POLISH(15),
  UKRAINIAN(16),
  CHINESE_MANDARIN(17),
  OTHER(100);

  private final int value;

  private Language(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static Language findByValue(int value) { 
    switch (value) {
      case 1:
        return GERMAN;
      case 2:
        return FRENCH;
      case 3:
        return ENGLISH;
      case 4:
        return ITALIAN;
      case 5:
        return SPANISH;
      case 6:
        return DUTCH;
      case 7:
        return PORTUGUESE;
      case 8:
        return SWEDISH;
      case 9:
        return ARABIC;
      case 10:
        return RUSSIAN;
      case 11:
        return JAPANESE;
      case 12:
        return KOREAN;
      case 13:
        return TURKISH;
      case 14:
        return VIETNAMESE;
      case 15:
        return POLISH;
      case 16:
        return UKRAINIAN;
      case 17:
        return CHINESE_MANDARIN;
      case 100:
        return OTHER;
      default:
        return null;
    }
  }
}
